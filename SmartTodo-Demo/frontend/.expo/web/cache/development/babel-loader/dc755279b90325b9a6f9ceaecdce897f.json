{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteNote from \"../../helpers/useDeleteNote\";\nimport useUpdateNote from \"../../helpers/useUpdateNote\";\nimport { SET_FULL_LIST, SET_DONE_LIST, SET_IN_PROGRESS_LIST, UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  var fullNotesList = useSelector(fullList);\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var deleteNote = useDeleteNote();\n  var updateNoteStatus = useUpdateNote();\n  var deleteOneNote = useCallback(function (id, showMes, mesState) {\n    return Alert.alert(\"Delete this todo?\", \"\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed on RenderTodo \" + id);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        deleteNote(fullNotesList, id, UPDATE_FULL_LIST);\n        showMes(!mesState);\n        setTimeout(function () {\n          return showMes(mesState);\n        }, 600);\n      }\n    }]);\n  }, [fullNotesList]);\n\n  var showAllNotes = function showAllNotes(arr) {\n    dispatch(UPDATE_FULL_LIST(arr));\n  };\n\n  var showDoneNotes = function showDoneNotes(arr) {\n    var markedArray = arr.filter(function (element) {\n      return !element.inProgess;\n    });\n    dispatch(SET_DONE_LIST(markedArray));\n  };\n\n  var showDoingNotes = function showDoingNotes(arr) {\n    var markedArray = arr.filter(function (element) {\n      return element.inProgess == true;\n    });\n    dispatch(SET_IN_PROGRESS_LIST(markedArray));\n  };\n\n  return React.createElement(NoteList, null, fullNotesList, showAllNotes, showDoneNotes, showDoingNotes, showModal, updateNoteStatus, deleteOneNote, setShowModal);\n}\n\nexport default NoteListContainer;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/frontend/src/pages/NotesList/NoteListContainer.js"],"names":["React","useState","useCallback","useEffect","useDispatch","useSelector","fullList","NoteList","useDeleteNote","useUpdateNote","SET_FULL_LIST","SET_DONE_LIST","SET_IN_PROGRESS_LIST","UPDATE_FULL_LIST","NoteListContainer","fullNotesList","dispatch","showModal","setShowModal","deleteNote","updateNoteStatus","deleteOneNote","id","showMes","mesState","Alert","alert","text","onPress","console","log","style","setTimeout","showAllNotes","arr","showDoneNotes","markedArray","filter","element","inProgess","showDoingNotes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,QAAT;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,oBAHF,EAIEC,gBAJF;;AAOA,SAASC,iBAAT,GAA6B;AAC3B,MAAMC,aAAa,GAAGV,WAAW,CAACC,QAAD,CAAjC;AACA,MAAMU,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,kBAAkCH,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOgB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;AACA,MAAMY,gBAAgB,GAAGX,aAAa,EAAtC;AAIA,MAAMY,aAAa,GAAGnB,WAAW,CAC/B,UAACoB,EAAD,EAAKC,OAAL,EAAcC,QAAd;AAAA,WACEC,KAAK,CAACC,KAAN,CAAY,mBAAZ,EAAiC,EAAjC,EAAqC,CACnC;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,mCAA4CR,EAA5C,CAAN;AAAA,OAFX;AAGES,MAAAA,KAAK,EAAE;AAHT,KADmC,EAMnC;AACEJ,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE,mBAAM;AACbT,QAAAA,UAAU,CAACJ,aAAD,EAAgBO,EAAhB,EAAoBT,gBAApB,CAAV;AACAU,QAAAA,OAAO,CAAC,CAACC,QAAF,CAAP;AACAQ,QAAAA,UAAU,CAAC;AAAA,iBAAMT,OAAO,CAACC,QAAD,CAAb;AAAA,SAAD,EAA0B,GAA1B,CAAV;AACD;AANH,KANmC,CAArC,CADF;AAAA,GAD+B,EAiB/B,CAACT,aAAD,CAjB+B,CAAjC;;AAoBA,MAAMkB,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AAC5BlB,IAAAA,QAAQ,CAACH,gBAAgB,CAACqB,GAAD,CAAjB,CAAR;AACD,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,GAAD,EAAS;AAC7B,QAAME,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAa,CAACA,OAAO,CAACC,SAAtB;AAAA,KAAX,CAApB;AACAvB,IAAAA,QAAQ,CAACL,aAAa,CAACyB,WAAD,CAAd,CAAR;AACD,GAHD;;AAKA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACN,GAAD,EAAS;AAC9B,QAAME,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACC,SAAR,IAAqB,IAAlC;AAAA,KAAX,CAApB;AACAvB,IAAAA,QAAQ,CAACJ,oBAAoB,CAACwB,WAAD,CAArB,CAAR;AACD,GAHD;;AAKA,SACE,oBAAC,QAAD,QACGrB,aADH,EAEGkB,YAFH,EAGGE,aAHH,EAIGK,cAJH,EAKGvB,SALH,EAMGG,gBANH,EAOGC,aAPH,EAQGH,YARH,CADF;AAYD;;AAED,eAAeJ,iBAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Alert, View } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteNote from \"../../helpers/useDeleteNote\";\nimport useUpdateNote from \"../../helpers/useUpdateNote\";\nimport {\n  SET_FULL_LIST,\n  SET_DONE_LIST,\n  SET_IN_PROGRESS_LIST,\n  UPDATE_FULL_LIST,\n} from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  const fullNotesList = useSelector(fullList);\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const deleteNote = useDeleteNote();\n  const updateNoteStatus = useUpdateNote();\n\n  // ---------------------------------------//\n\n  const deleteOneNote = useCallback(\n    (id, showMes, mesState) =>\n      Alert.alert(\"Delete this todo?\", \"\", [\n        {\n          text: \"No\",\n          onPress: () => console.log(`Cancel Pressed on RenderTodo ${id}`),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            deleteNote(fullNotesList, id, UPDATE_FULL_LIST);\n            showMes(!mesState);\n            setTimeout(() => showMes(mesState), 600);\n          },\n        },\n      ]),\n    [fullNotesList]\n  );\n\n  const showAllNotes = (arr) => {\n    dispatch(UPDATE_FULL_LIST(arr));\n  };\n\n  const showDoneNotes = (arr) => {\n    const markedArray = arr.filter((element) => !element.inProgess);\n    dispatch(SET_DONE_LIST(markedArray));\n  };\n\n  const showDoingNotes = (arr) => {\n    const markedArray = arr.filter((element) => element.inProgess == true);\n    dispatch(SET_IN_PROGRESS_LIST(markedArray));\n  };\n\n  return (\n    <NoteList>\n      {fullNotesList}\n      {showAllNotes}\n      {showDoneNotes}\n      {showDoingNotes}\n      {showModal}\n      {updateNoteStatus}\n      {deleteOneNote}\n      {setShowModal}\n    </NoteList>\n  );\n}\n\nexport default NoteListContainer;\n"]},"metadata":{},"sourceType":"module"}