{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDispatch } from \"react-redux\";\nexport default function useUpdateNote() {\n  var dispatch = useDispatch();\n  return function (arr, id, requestAction, status) {\n    var itemData = arr.map(function (item) {\n      return item.id === id ? _objectSpread(_objectSpread({}, item), {}, {\n        inProgess: status\n      }) : item;\n    });\n    dispatch(requestAction(itemData));\n  };\n}","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/frontend/src/helpers/useUpdateNote.js"],"names":["useDispatch","useUpdateNote","dispatch","arr","id","requestAction","status","itemData","map","item","inProgess"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,SAAO,UAACG,GAAD,EAAMC,EAAN,EAAUC,aAAV,EAAyBC,MAAzB,EAAoC;AACzC,QAAMC,QAAQ,GAAGJ,GAAG,CAACK,GAAJ,CAAQ,UAACC,IAAD;AAAA,aACvBA,IAAI,CAACL,EAAL,KAAYA,EAAZ,mCAAsBK,IAAtB;AAA4BC,QAAAA,SAAS,EAAEJ;AAAvC,WAAkDG,IAD3B;AAAA,KAAR,CAAjB;AAGAP,IAAAA,QAAQ,CAACG,aAAa,CAACE,QAAD,CAAd,CAAR;AACD,GALD;AAMD","sourcesContent":["import { useDispatch } from \"react-redux\";\n\nexport default function useUpdateNote() {\n  const dispatch = useDispatch();\n  return (arr, id, requestAction, status) => {\n    const itemData = arr.map((item) =>\n      item.id === id ? { ...item, inProgess: status } : item\n    );\n    dispatch(requestAction(itemData));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}