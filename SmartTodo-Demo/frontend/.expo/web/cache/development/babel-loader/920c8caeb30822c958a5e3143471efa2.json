{"ast":null,"code":"import React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nvar ListRenderedTodos = function ListRenderedTodos(_ref) {\n  var item = _ref.item,\n      index = _ref.index;\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7\n  }, React.createElement(View, {\n    style: styles.containerList\n  }, React.createElement(View, {\n    style: styles.textBlock\n  }, React.createElement(Text, {\n    style: styles.renderIndex\n  }, index + 1), React.createElement(Text, {\n    style: styles.renderTextDone\n  }, item.title), React.createElement(Text, {\n    style: styles.textStatusDone\n  }, \"Done !\")), React.createElement(View, {\n    style: styles.infoBlock\n  }, React.createElement(Text, {\n    style: styles.whenAdded\n  }, \"Added \", item.date), React.createElement(Text, {\n    style: styles.whenFinished\n  }, \"Finished \", item.date))));\n};\n\nvar styles = StyleSheet.create({\n  containerList: {\n    height: \"auto\",\n    backgroundColor: \"#111\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  hideContainerLst: {\n    display: \"none\"\n  },\n  flatBlock: {\n    marginBottom: 50\n  },\n  wrapperSwiper: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  textBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#bcd4d436\",\n    borderRadius: 4,\n    width: \"100%\",\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    marginVertical: 5\n  },\n  renderIndex: {\n    color: \"silver\",\n    paddingHorizontal: 0,\n    width: 20\n  },\n  renderTextDone: {\n    width: \"85%\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"line-through\"\n  },\n  infoBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  whenAdded: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15\n  },\n  whenFinished: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15\n  },\n  textStatusDone: {\n    textAlignVertical: \"center\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    textAlign: \"justify\"\n  },\n  swipableDelete: {\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    minWidth: 50,\n    minHeight: 50,\n    height: \"auto\",\n    borderRadius: 2\n  },\n  swipableEdit: {\n    backgroundColor: \"green\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    flex: 1,\n    maxHeight: 50,\n    height: \"auto\",\n    borderRadius: 2\n  }\n});\nexport default ListRenderedTodos;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/frontend/src/pages/GraphList/ListRenderedTodos.js"],"names":["React","useState","useMemo","useDispatch","useSelector","Swipeable","fullList","UPDATE_FULL_LIST","ListRenderedTodos","item","index","styles","containerList","textBlock","renderIndex","renderTextDone","title","textStatusDone","infoBlock","whenAdded","date","whenFinished","StyleSheet","create","height","backgroundColor","justifyContent","width","hideContainerLst","display","flatBlock","marginBottom","wrapperSwiper","flexDirection","flex","alignItems","borderWidth","borderColor","borderRadius","paddingHorizontal","paddingVertical","marginVertical","color","textAlign","textDecorationLine","textAlignVertical","swipableDelete","marginTop","marginLeft","padding","minWidth","minHeight","swipableEdit","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  Alert,\n  TouchableOpacity,\n  Button,\n} from \"react-native\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\n\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nconst ListRenderedTodos = ({ item, index }) => {\n  return (\n    <TouchableOpacity activeOpacity={0.7}>\n      <View style={styles.containerList}>\n        <View style={styles.textBlock}>\n          <Text style={styles.renderIndex}>{index + 1}</Text>\n          <Text style={styles.renderTextDone}>{item.title}</Text>\n          <Text style={styles.textStatusDone}>Done !</Text>\n        </View>\n        <View style={styles.infoBlock}>\n          <Text style={styles.whenAdded}>Added {item.date}</Text>\n          <Text style={styles.whenFinished}>Finished {item.date}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerList: {\n    height: \"auto\",\n    backgroundColor: \"#111\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  hideContainerLst: {\n    display: \"none\",\n  },\n  flatBlock: {\n    marginBottom: 50,\n  },\n  wrapperSwiper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  textBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#bcd4d436\",\n    borderRadius: 4,\n    width: \"100%\",\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    marginVertical: 5,\n  },\n  renderIndex: {\n    color: \"silver\",\n    paddingHorizontal: 0,\n    width: 20,\n  },\n  renderTextDone: {\n    width: \"85%\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"line-through\",\n  },\n  infoBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  whenAdded: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15,\n  },\n  whenFinished: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15,\n  },\n  textStatusDone: {\n    textAlignVertical: \"center\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    textAlign: \"justify\",\n  },\n  swipableDelete: {\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    minWidth: 50,\n    minHeight: 50,\n    height: \"auto\",\n    borderRadius: 2,\n  },\n  swipableEdit: {\n    backgroundColor: \"green\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    flex: 1,\n    maxHeight: 50,\n    height: \"auto\",\n    borderRadius: 2,\n  },\n});\n\nexport default ListRenderedTodos;\n"]},"metadata":{},"sourceType":"module"}