{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport var initNotesList = {\n  notesList: [],\n  usersList: [],\n  notesListPart: \"\",\n  pageLimit: 1,\n  isActiveNote: false,\n  fetchHelper: 0\n};\nexport var notesList = createSlice({\n  name: \"notesList-reducer\",\n  initialState: initNotesList,\n  reducers: {\n    SET_NOTES_LIST: function SET_NOTES_LIST(state, action) {\n      state, state.notesList = action.payload;\n    },\n    IS_ACTIVE_NOTE: function IS_ACTIVE_NOTE(state, action) {\n      state, state.isActiveNote = action.payload;\n    },\n    SET_INFINITE_FETCH_COUNTER: function SET_INFINITE_FETCH_COUNTER(state, action) {\n      state, state.fetchHelper = action.payload;\n    },\n    SET_USERS_LIST: function SET_USERS_LIST(state, action) {\n      state, state.usersList = action.payload;\n    },\n    SET_INFINITY_PART: function SET_INFINITY_PART(state, action) {\n      state, state.notesListPart = action.payload;\n    },\n    SET_PAGE_LIMIT: function SET_PAGE_LIMIT(state, action) {\n      state, state.pageLimit = action.payload;\n    }\n  }\n});\nexport default notesList.reducer;\nvar _notesList$actions = notesList.actions,\n    SET_NOTES_LIST = _notesList$actions.SET_NOTES_LIST,\n    IS_ACTIVE_NOTE = _notesList$actions.IS_ACTIVE_NOTE,\n    SET_INFINITE_FETCH_COUNTER = _notesList$actions.SET_INFINITE_FETCH_COUNTER,\n    SET_USERS_LIST = _notesList$actions.SET_USERS_LIST,\n    SET_INFINITY_PART = _notesList$actions.SET_INFINITY_PART,\n    SET_PAGE_LIMIT = _notesList$actions.SET_PAGE_LIMIT;\nexport { SET_NOTES_LIST, IS_ACTIVE_NOTE, SET_INFINITE_FETCH_COUNTER, SET_USERS_LIST, SET_INFINITY_PART, SET_PAGE_LIMIT };","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/reduxApi/notesList/notesToolkit.js"],"names":["createSlice","initNotesList","notesList","usersList","notesListPart","pageLimit","isActiveNote","fetchHelper","name","initialState","reducers","SET_NOTES_LIST","state","action","payload","IS_ACTIVE_NOTE","SET_INFINITE_FETCH_COUNTER","SET_USERS_LIST","SET_INFINITY_PART","SET_PAGE_LIMIT","reducer","actions"],"mappings":"AAGA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,SAAS,EAAE,EADgB;AAE3BC,EAAAA,SAAS,EAAE,EAFgB;AAG3BC,EAAAA,aAAa,EAAE,EAHY;AAI3BC,EAAAA,SAAS,EAAE,CAJgB;AAK3BC,EAAAA,YAAY,EAAE,KALa;AAM3BC,EAAAA,WAAW,EAAE;AANc,CAAtB;AASP,OAAO,IAAML,SAAS,GAAGF,WAAW,CAAC;AACnCQ,EAAAA,IAAI,EAAE,mBAD6B;AAEnCC,EAAAA,YAAY,EAAER,aAFqB;AAGnCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,wBAACC,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,EAAGA,KAAK,CAACV,SAAN,GAAkBW,MAAM,CAACC,OAAjC;AACD,KAHO;AAIRC,IAAAA,cAAc,EAAE,wBAACH,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,EAAGA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAApC;AACD,KANO;AAORE,IAAAA,0BAA0B,EAAE,oCAACJ,KAAD,EAAQC,MAAR,EAAmB;AAC7CD,MAAAA,KAAK,EAAGA,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAAnC;AACD,KATO;AAURG,IAAAA,cAAc,EAAE,wBAACL,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,EAAGA,KAAK,CAACT,SAAN,GAAkBU,MAAM,CAACC,OAAjC;AACD,KAZO;AAaRI,IAAAA,iBAAiB,EAAE,2BAACN,KAAD,EAAQC,MAAR,EAAmB;AACpCD,MAAAA,KAAK,EAAGA,KAAK,CAACR,aAAN,GAAsBS,MAAM,CAACC,OAArC;AACD,KAfO;AAgBRK,IAAAA,cAAc,EAAE,wBAACP,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,EAAGA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACC,OAAjC;AACD;AAlBO;AAHyB,CAAD,CAA7B;AAyBP,eAAeZ,SAAS,CAACkB,OAAzB;AACO,yBAOHlB,SAAS,CAACmB,OAPP;AAAA,IACLV,cADK,sBACLA,cADK;AAAA,IAELI,cAFK,sBAELA,cAFK;AAAA,IAGLC,0BAHK,sBAGLA,0BAHK;AAAA,IAILC,cAJK,sBAILA,cAJK;AAAA,IAKLC,iBALK,sBAKLA,iBALK;AAAA,IAMLC,cANK,sBAMLA,cANK","sourcesContent":["/* eslint-disable no-sequences */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initNotesList = {\n  notesList: [],\n  usersList: [],\n  notesListPart: \"\",\n  pageLimit: 1,\n  isActiveNote: false,\n  fetchHelper: 0,\n};\n\nexport const notesList = createSlice({\n  name: \"notesList-reducer\",\n  initialState: initNotesList,\n  reducers: {\n    SET_NOTES_LIST: (state, action) => {\n      state, (state.notesList = action.payload);\n    },\n    IS_ACTIVE_NOTE: (state, action) => {\n      state, (state.isActiveNote = action.payload);\n    },\n    SET_INFINITE_FETCH_COUNTER: (state, action) => {\n      state, (state.fetchHelper = action.payload);\n    },\n    SET_USERS_LIST: (state, action) => {\n      state, (state.usersList = action.payload);\n    },\n    SET_INFINITY_PART: (state, action) => {\n      state, (state.notesListPart = action.payload);\n    },\n    SET_PAGE_LIMIT: (state, action) => {\n      state, (state.pageLimit = action.payload);\n    },\n  },\n});\n\nexport default notesList.reducer;\nexport const {\n  SET_NOTES_LIST,\n  IS_ACTIVE_NOTE,\n  SET_INFINITE_FETCH_COUNTER,\n  SET_USERS_LIST,\n  SET_INFINITY_PART,\n  SET_PAGE_LIMIT,\n} = notesList.actions;\n"]},"metadata":{},"sourceType":"module"}