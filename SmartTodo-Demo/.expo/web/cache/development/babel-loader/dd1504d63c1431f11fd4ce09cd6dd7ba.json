{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector } from \"react-redux\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteTodo from \"../../helpers/useDeleteNote\";\nimport useUpdateStatus from \"../../helpers/useUpdateNote\";\nimport { SET_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  var fullNotesList = useSelector(fullList);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentState = _useState4[0],\n      setCurrentState = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonStyle = _useState6[0],\n      setButtonStyle = _useState6[1];\n\n  var deleteTodo = useDeleteTodo();\n  var updateNoteStatus = useUpdateStatus();\n\n  var letDeleteTodo = function letDeleteTodo(id) {\n    deleteTodo(fullNotesList, id, UPDATE_FULL_LIST);\n  };\n\n  var updateStatus = function updateStatus(arr, id, requestAction, status) {\n    updateNoteStatus(arr, id, requestAction, status);\n  };\n\n  var deleteOneTodo = useCallback(function (letDeleteTodo, id, showMes, mesState) {\n    return Alert.alert(\"Delete this todo?\", \"\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed on RenderTodo \" + id);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        letDeleteTodo(id);\n        showMes(!mesState);\n        setTimeout(function () {\n          return showMes(mesState);\n        }, 600);\n      }\n    }]);\n  }, [fullNotesList]);\n\n  var showAllNotes = function showAllNotes(arr, e) {\n    setCurrentState(_toConsumableArray(arr));\n    setButtonStyle(e);\n  };\n\n  var showDoneNotes = function showDoneNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return !element.todoStatus;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  var showDoingNotes = function showDoingNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return element.todoStatus == true;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  return React.createElement(NoteList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, fullNotesList, buttonStyle, showAllNotes, showDoneNotes, showDoingNotes, showModal, letDeleteTodo, updateStatus, deleteOneTodo, setShowModal);\n}\n\nexport default NoteListContainer;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","fullList","NoteList","useDeleteTodo","useUpdateStatus","SET_FULL_LIST","NoteListContainer","fullNotesList","showModal","setShowModal","currentState","setCurrentState","buttonStyle","setButtonStyle","deleteTodo","updateNoteStatus","letDeleteTodo","id","UPDATE_FULL_LIST","updateStatus","arr","requestAction","status","deleteOneTodo","showMes","mesState","Alert","alert","text","onPress","console","log","style","setTimeout","showAllNotes","e","showDoneNotes","markedArray","filter","element","todoStatus","showDoingNotes"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Alert } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteTodo from \"../../helpers/useDeleteNote\";\nimport useUpdateStatus from \"../../helpers/useUpdateNote\";\nimport { SET_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  const fullNotesList = useSelector(fullList);\n\n  const [showModal, setShowModal] = useState(false);\n  const [currentState, setCurrentState] = useState(\"\");\n  const [buttonStyle, setButtonStyle] = useState(\"\");\n\n  const deleteTodo = useDeleteTodo();\n  const updateNoteStatus = useUpdateStatus();\n\n  const letDeleteTodo = (id) => {\n    deleteTodo(fullNotesList, id, UPDATE_FULL_LIST);\n  }; /* We have to delete my todo if item.id == id, or elem have to save if item.id !== id. Remember, filter return TRUE data */\n\n  const updateStatus = (arr, id, requestAction, status) => {\n    updateNoteStatus(arr, id, requestAction, status);\n  };\n\n  /* Next time i going to do cheker for todoStatus in mainTodo-state, but i dont know how identificate elem-id from current element (like e.target.data-path in react)*/\n\n  // ---------------------------------------//\n\n  const deleteOneTodo = useCallback(\n    (letDeleteTodo, id, showMes, mesState) =>\n      Alert.alert(\"Delete this todo?\", \"\", [\n        {\n          text: \"No\",\n          onPress: () => console.log(`Cancel Pressed on RenderTodo ${id}`),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            letDeleteTodo(id);\n            showMes(!mesState);\n            setTimeout(() => showMes(mesState), 600);\n          },\n        },\n      ]),\n    [fullNotesList]\n  );\n\n  const showAllNotes = (arr, e) => {\n    setCurrentState([...arr]);\n    setButtonStyle(e);\n  };\n\n  const showDoneNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => !element.todoStatus);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  const showDoingNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => element.todoStatus == true);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  return (\n    <NoteList>\n      {fullNotesList}\n      {buttonStyle}\n      {showAllNotes}\n      {showDoneNotes}\n      {showDoingNotes}\n      {showModal}\n      {letDeleteTodo}\n      {updateStatus}\n      {deleteOneTodo}\n      {setShowModal}\n    </NoteList>\n  );\n}\n\nexport default NoteListContainer;\n"]},"metadata":{},"sourceType":"module"}