{"ast":null,"code":"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_FULL_LIST } from \"../reduxApi/notesList/notesToolkit\";\n\nfunction useAddNotes(currentTitile) {\n  return function () {\n    var dispatch = useDispatch();\n    return dispatch(SET_FULL_LIST(newTodo));\n  };\n}\n\nexport default useAddNotes;\nexport function useFetchEvents() {\n  var dispatch = useDispatch();\n  var date = new Date().toLocaleDateString();\n  var time = new Date().toLocaleTimeString();\n  var newTodo = {\n    id: Date.now().toString(),\n    title: currentTitile,\n    todoStatus: true,\n    date: date + \" \" + time\n  };\n  return function () {\n    if (items.length === 0) {\n      dispatch(requestEvents(true));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/helpers/useAddNote.js"],"names":["React","useState","useDispatch","SET_FULL_LIST","useAddNotes","currentTitile","dispatch","newTodo","useFetchEvents","date","Date","toLocaleDateString","time","toLocaleTimeString","id","now","toString","title","todoStatus","items","length","requestEvents"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT;;AAEA,SAASC,WAAT,CAAqBC,aAArB,EAAoC;AAClC,SAAO,YAAM;AACX,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,WAAOI,QAAQ,CAACH,aAAa,CAACI,OAAD,CAAd,CAAf;AACD,GAHD;AAID;;AAED,eAAeH,WAAf;AAEA,OAAO,SAASI,cAAT,GAA0B;AAC/B,MAAMF,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMO,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAb;AACA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,GAAWG,kBAAX,EAAb;AACA,MAAMN,OAAO,GAAG;AACdO,IAAAA,EAAE,EAAEJ,IAAI,CAACK,GAAL,GAAWC,QAAX,EADU;AAEdC,IAAAA,KAAK,EAAEZ,aAFO;AAGda,IAAAA,UAAU,EAAE,IAHE;AAIdT,IAAAA,IAAI,EAAKA,IAAL,SAAaG;AAJH,GAAhB;AAMA,SAAO,YAAM;AACX,QAAIO,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AAEtBd,MAAAA,QAAQ,CAACe,aAAa,CAAC,IAAD,CAAd,CAAR;AACD;AACF,GALD;AAMD","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_FULL_LIST } from \"../reduxApi/notesList/notesToolkit\";\n\nfunction useAddNotes(currentTitile) {\n  return () => {\n    const dispatch = useDispatch();\n    return dispatch(SET_FULL_LIST(newTodo));\n  };\n}\n\nexport default useAddNotes;\n\nexport function useFetchEvents() {\n  const dispatch = useDispatch();\n  const date = new Date().toLocaleDateString();\n  const time = new Date().toLocaleTimeString();\n  const newTodo = {\n    id: Date.now().toString(),\n    title: currentTitile,\n    todoStatus: true,\n    date: `${date} ${time}`,\n  };\n  return () => {\n    if (items.length === 0) {\n      // Redux action. requestEvents returns object with type.\n      dispatch(requestEvents(true));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}