{"ast":null,"code":"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_FULL_LIST } from \"../reduxApi/notesList/notesToolkit\";\nexport default function useAddNote(currentTitile) {\n  var dispatch = useDispatch();\n  var date = new Date().toLocaleDateString();\n  var time = new Date().toLocaleTimeString();\n  var newTodo = {\n    id: Date.now().toString(),\n    title: currentTitile,\n    todoStatus: true,\n    date: date + \" \" + time\n  };\n  return function () {\n    if (newTodo) {\n      dispatch(SET_FULL_LIST(newTodo));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/helpers/useAddNote.js"],"names":["React","useState","useDispatch","SET_FULL_LIST","useAddNote","currentTitile","dispatch","date","Date","toLocaleDateString","time","toLocaleTimeString","newTodo","id","now","toString","title","todoStatus"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT;AAEA,eAAe,SAASC,UAAT,CAAoBC,aAApB,EAAmC;AAChD,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAb;AACA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,GAAWG,kBAAX,EAAb;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,EAAE,EAAEL,IAAI,CAACM,GAAL,GAAWC,QAAX,EADU;AAEdC,IAAAA,KAAK,EAAEX,aAFO;AAGdY,IAAAA,UAAU,EAAE,IAHE;AAIdV,IAAAA,IAAI,EAAKA,IAAL,SAAaG;AAJH,GAAhB;AAMA,SAAO,YAAM;AACX,QAAIE,OAAJ,EAAa;AAEXN,MAAAA,QAAQ,CAACH,aAAa,CAACS,OAAD,CAAd,CAAR;AACD;AACF,GALD;AAMD","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_FULL_LIST } from \"../reduxApi/notesList/notesToolkit\";\n\nexport default function useAddNote(currentTitile) {\n  const dispatch = useDispatch();\n  const date = new Date().toLocaleDateString();\n  const time = new Date().toLocaleTimeString();\n  const newTodo = {\n    id: Date.now().toString(),\n    title: currentTitile,\n    todoStatus: true,\n    date: `${date} ${time}`,\n  };\n  return () => {\n    if (newTodo) {\n      // Redux action. requestEvents returns object with type.\n      dispatch(SET_FULL_LIST(newTodo));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}