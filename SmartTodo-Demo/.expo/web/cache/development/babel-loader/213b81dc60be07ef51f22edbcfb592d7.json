{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector } from \"react-redux\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\n\nfunction NoteListContainer() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentState = _useState4[0],\n      setCurrentState = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonStyle = _useState6[0],\n      setButtonStyle = _useState6[1];\n\n  var fullNotesList = useSelector(fullList);\n\n  var _useState7 = useState(fullNotesList),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mainTodo = _useState8[0],\n      setMainTodo = _useState8[1];\n\n  var letDeleteTodo = function letDeleteTodo(id) {\n    setMainTodo(function (prev) {\n      return prev.filter(function (item) {\n        return item.id !== id;\n      });\n    });\n  };\n\n  var updateStatus = function updateStatus(id, status) {\n    var itemData = mainTodo.map(function (item) {\n      return item.id === id ? _objectSpread(_objectSpread({}, item), {}, {\n        todoStatus: status\n      }) : item;\n    });\n    setMainTodo(_toConsumableArray(itemData));\n  };\n\n  var deleteOneTodo = useCallback(function (letDeleteTodo, id, showMes, mesState) {\n    return Alert.alert(\"Delete this todo?\", \"\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed on RenderTodo \" + id);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        letDeleteTodo(id);\n        showMes(!mesState);\n        setTimeout(function () {\n          return showMes(mesState);\n        }, 600);\n      }\n    }]);\n  }, [mainTodo]);\n  useEffect(function () {\n    setCurrentState(_toConsumableArray(mainTodo));\n  }, [mainTodo]);\n\n  var showAllNotes = function showAllNotes(arr, e) {\n    setCurrentState(_toConsumableArray(arr));\n    setButtonStyle(e);\n  };\n\n  var showDoneNotes = function showDoneNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return !element.todoStatus;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  var showDoingNotes = function showDoingNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return element.todoStatus == true;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  return React.createElement(NoteList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, fullNotesList, buttonStyle, showAllNotes, showDoneNotes, showDoingNotes, currentState, showModal, letDeleteTodo, updateStatus, deleteOneTodo, setShowModal);\n}\n\nexport default NoteListContainer;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","fullList","NoteList","NoteListContainer","showModal","setShowModal","currentState","setCurrentState","buttonStyle","setButtonStyle","fullNotesList","mainTodo","setMainTodo","letDeleteTodo","id","prev","filter","item","updateStatus","status","itemData","map","todoStatus","deleteOneTodo","showMes","mesState","Alert","alert","text","onPress","console","log","style","setTimeout","showAllNotes","arr","e","showDoneNotes","markedArray","element","showDoingNotes"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Alert } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\n\nfunction NoteListContainer() {\n  const [showModal, setShowModal] = useState(false);\n  const [currentState, setCurrentState] = useState(\"\");\n  const [buttonStyle, setButtonStyle] = useState(\"\");\n  const fullNotesList = useSelector(fullList);\n\n  const [mainTodo, setMainTodo] = useState(fullNotesList);\n\n  const letDeleteTodo = (id) => {\n    setMainTodo((prev) => prev.filter((item) => item.id !== id));\n  }; /* We have to delete my todo if item.id == id, or elem have to save if item.id !== id. Remember, filter return TRUE data */\n\n  /* Next time i going to do cheker for todoStatus in mainTodo-state, but i dont know how identificate elem-id from current element (like e.target.data-path in react)*/\n  const updateStatus = (id, status) => {\n    const itemData = mainTodo.map((item) =>\n      item.id === id ? { ...item, todoStatus: status } : item\n    );\n    setMainTodo([...itemData]);\n  };\n\n  // ---------------------------------------//\n\n  const deleteOneTodo = useCallback(\n    (letDeleteTodo, id, showMes, mesState) =>\n      Alert.alert(\"Delete this todo?\", \"\", [\n        {\n          text: \"No\",\n          onPress: () => console.log(`Cancel Pressed on RenderTodo ${id}`),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            letDeleteTodo(id);\n            showMes(!mesState);\n            setTimeout(() => showMes(mesState), 600);\n          },\n        },\n      ]),\n    [mainTodo]\n  );\n\n  useEffect(() => {\n    setCurrentState([...mainTodo]);\n  }, [mainTodo]);\n\n  const showAllNotes = (arr, e) => {\n    setCurrentState([...arr]);\n    setButtonStyle(e);\n  };\n\n  const showDoneNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => !element.todoStatus);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  const showDoingNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => element.todoStatus == true);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  return (\n    <NoteList>\n      {fullNotesList}\n      {buttonStyle}\n      {showAllNotes}\n      {showDoneNotes}\n      {showDoingNotes}\n      {currentState}\n      {showModal}\n      {letDeleteTodo}\n      {updateStatus}\n      {deleteOneTodo}\n      {setShowModal}\n    </NoteList>\n  );\n}\n\nexport default NoteListContainer;\n"]},"metadata":{},"sourceType":"module"}