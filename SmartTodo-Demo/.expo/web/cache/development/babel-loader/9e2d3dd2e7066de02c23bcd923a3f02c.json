{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nvar ListRenderedTodos = function ListRenderedTodos(_ref) {\n  var item = _ref.item,\n      setShowModal = _ref.setShowModal,\n      showModal = _ref.showModal,\n      index = _ref.index,\n      deleteOneNote = _ref.deleteOneNote,\n      updateNoteStatus = _ref.updateNoteStatus;\n\n  var _useState = useState(!item.inProgess),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggleCheckBox = _useState2[0],\n      setToggleCheckBox = _useState2[1];\n\n  var fullNotesList = useSelector(fullList);\n\n  var checkerWrapper = function checkerWrapper(id, status) {\n    setToggleCheckBox(function (prev) {\n      return !prev;\n    });\n    updateNoteStatus(fullNotesList, id, UPDATE_FULL_LIST, status);\n  };\n\n  var rightSwipe = function rightSwipe(progress, dragX) {\n    var scale = dragX.interpolate({\n      inputRange: [0, 100],\n      outputRange: [1, 0],\n      extrapolate: \"clamp\"\n    });\n    console.log(\"ON NOTELIST\", item.inProgess);\n    return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deleteOneNote(item.id, setShowModal, showModal);\n      },\n      activeOpacity: 0.7\n    }, React.createElement(View, {\n      style: styles.swipableDelete\n    }, React.createElement(Animated.Text, {\n      style: {\n        transform: [{\n          scale: scale\n        }]\n      }\n    }, \"Delete\"))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return Alert.alert(\"letDeleteTodo, item.id, setShowModal, showModal\", \"\");\n      },\n      activeOpacity: 0.7\n    }, React.createElement(View, {\n      style: styles.swipableEdit\n    }, React.createElement(Animated.Text, {\n      style: {\n        transform: [{\n          scale: scale\n        }]\n      }\n    }, \"Do it again\"))));\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checked = _useState4[0],\n      setChecked = _useState4[1];\n\n  var handleCheckboxPress = function handleCheckboxPress() {\n    setChecked(function (prev) {\n      return !prev;\n    });\n  };\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7\n  }, React.createElement(Swipeable, {\n    renderRightActions: rightSwipe\n  }, React.createElement(View, {\n    style: styles.containerList\n  }, React.createElement(View, {\n    style: styles.textBlock\n  }, React.createElement(Text, {\n    style: styles.renderIndex\n  }, index + 1), React.createElement(Text, {\n    style: item.inProgess ? styles.renderTextDoing : styles.renderTextDone\n  }, item.title), React.createElement(BouncyCheckbox, {\n    style: styles.checkBox,\n    isChecked: !item.inProgess,\n    fillColor: \"green\",\n    unfillColor: \"#eee\",\n    iconStyle: {\n      borderColor: \"silver\"\n    },\n    onPress: function onPress() {\n      return checkerWrapper(item.id, !item.inProgess);\n    }\n  })), React.createElement(View, {\n    style: styles.infoBlock\n  }, React.createElement(Text, {\n    style: styles.whenAdded\n  }, \"Added \", item.date), React.createElement(Text, {\n    style: item.inProgess ? styles.textStatusDoing : styles.textStatusDone\n  }, item.inProgess ? \"In progress...\" : \"Done\")))));\n};\n\nvar styles = StyleSheet.create({\n  containerList: {\n    height: \"auto\",\n    backgroundColor: \"#111\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  hideContainerLst: {\n    display: \"none\"\n  },\n  flatBlock: {\n    marginBottom: 50\n  },\n  checkBox: {\n    marginLeft: 10,\n    marginRight: 3,\n    width: 25\n  },\n  wrapperSwiper: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  textBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#bcd4d436\",\n    borderRadius: 4,\n    width: \"100%\",\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    marginVertical: 5\n  },\n  renderIndex: {\n    color: \"silver\",\n    paddingHorizontal: 0,\n    width: 20\n  },\n  renderTextDone: {\n    width: \"85%\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"line-through\"\n  },\n  renderTextDoing: {\n    width: \"85%\",\n    color: \"silver\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"none\"\n  },\n  infoBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  whenAdded: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15\n  },\n  textStatusDone: {\n    color: \"rgba(80, 150, 65, 0.65)\",\n    marginBottom: 15\n  },\n  textStatusDoing: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15\n  },\n  swipableDelete: {\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    minWidth: 50,\n    minHeight: 50,\n    height: \"auto\",\n    borderRadius: 2\n  },\n  swipableEdit: {\n    backgroundColor: \"green\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    flex: 1,\n    maxHeight: 50,\n    height: \"auto\",\n    borderRadius: 2\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  checkbox: {\n    width: 64,\n    height: 64\n  }\n});\nexport default ListRenderedTodos;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/ListRenderedTodos.js"],"names":["React","useState","useMemo","useDispatch","useSelector","Swipeable","BouncyCheckbox","fullList","UPDATE_FULL_LIST","ListRenderedTodos","item","setShowModal","showModal","index","deleteOneNote","updateNoteStatus","inProgess","toggleCheckBox","setToggleCheckBox","fullNotesList","checkerWrapper","id","status","prev","rightSwipe","progress","dragX","scale","interpolate","inputRange","outputRange","extrapolate","console","log","styles","swipableDelete","transform","Alert","alert","swipableEdit","checked","setChecked","handleCheckboxPress","containerList","textBlock","renderIndex","renderTextDoing","renderTextDone","title","checkBox","borderColor","infoBlock","whenAdded","date","textStatusDoing","textStatusDone","StyleSheet","create","height","backgroundColor","justifyContent","width","hideContainerLst","display","flatBlock","marginBottom","marginLeft","marginRight","wrapperSwiper","flexDirection","flex","alignItems","borderWidth","borderRadius","paddingHorizontal","paddingVertical","marginVertical","color","textAlign","textDecorationLine","marginTop","padding","minWidth","minHeight","maxHeight","container","checkbox"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  Alert,\n  TouchableOpacity,\n  Button,\n  Pressable,\n} from \"react-native\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\n\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nconst ListRenderedTodos = ({\n  item,\n  setShowModal,\n  showModal,\n  index,\n  deleteOneNote,\n  updateNoteStatus,\n}) => {\n  const [toggleCheckBox, setToggleCheckBox] = useState(!item.inProgess);\n  const fullNotesList = useSelector(fullList);\n\n  const checkerWrapper = (id, status) => {\n    setToggleCheckBox((prev) => !prev);\n    updateNoteStatus(fullNotesList, id, UPDATE_FULL_LIST, status);\n  };\n\n  const rightSwipe = (progress, dragX) => {\n    const scale = dragX.interpolate({\n      inputRange: [0, 100],\n      outputRange: [1, 0],\n      extrapolate: \"clamp\",\n    });\n\n    console.log(\"ON NOTELIST\", item.inProgess);\n\n    return (\n      <>\n        <TouchableOpacity\n          onPress={() => deleteOneNote(item.id, setShowModal, showModal)}\n          activeOpacity={0.7}\n        >\n          <View style={styles.swipableDelete}>\n            <Animated.Text style={{ transform: [{ scale: scale }] }}>\n              Delete\n            </Animated.Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() =>\n            Alert.alert(\"letDeleteTodo, item.id, setShowModal, showModal\", \"\")\n          }\n          activeOpacity={0.7}\n        >\n          <View style={styles.swipableEdit}>\n            <Animated.Text style={{ transform: [{ scale: scale }] }}>\n              Do it again\n            </Animated.Text>\n          </View>\n        </TouchableOpacity>\n      </>\n    );\n  };\n\n  const [checked, setChecked] = useState(false);\n\n  const handleCheckboxPress = () => {\n    setChecked((prev) => {\n      return !prev;\n    });\n  };\n\n  return (\n    <TouchableOpacity activeOpacity={0.7}>\n      <Swipeable renderRightActions={rightSwipe}>\n        <View style={styles.containerList}>\n          <View style={styles.textBlock}>\n            <Text style={styles.renderIndex}>{index + 1}</Text>\n            <Text\n              style={\n                item.inProgess ? styles.renderTextDoing : styles.renderTextDone\n              }\n            >\n              {item.title}\n            </Text>\n\n            <BouncyCheckbox\n              style={styles.checkBox}\n              isChecked={!item.inProgess}\n              fillColor=\"green\"\n              unfillColor=\"#eee\"\n              iconStyle={{ borderColor: \"silver\" }}\n              onPress={() => checkerWrapper(item.id, !item.inProgess)}\n            />\n          </View>\n\n          <View style={styles.infoBlock}>\n            <Text style={styles.whenAdded}>Added {item.date}</Text>\n            <Text\n              style={\n                item.inProgess ? styles.textStatusDoing : styles.textStatusDone\n              }\n            >\n              {item.inProgess ? \"In progress...\" : \"Done\"}\n            </Text>\n          </View>\n        </View>\n      </Swipeable>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerList: {\n    height: \"auto\",\n    backgroundColor: \"#111\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  hideContainerLst: {\n    display: \"none\",\n  },\n  flatBlock: {\n    marginBottom: 50,\n  },\n  checkBox: {\n    marginLeft: 10,\n    marginRight: 3,\n    width: 25,\n  },\n  wrapperSwiper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  textBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#bcd4d436\",\n    borderRadius: 4,\n    width: \"100%\",\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    marginVertical: 5,\n  },\n  renderIndex: {\n    color: \"silver\",\n    paddingHorizontal: 0,\n    width: 20,\n  },\n  renderTextDone: {\n    width: \"85%\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"line-through\",\n  },\n  renderTextDoing: {\n    width: \"85%\",\n    color: \"silver\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"none\",\n  },\n  infoBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  whenAdded: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15,\n  },\n  textStatusDone: {\n    color: \"rgba(80, 150, 65, 0.65)\",\n    marginBottom: 15,\n  },\n  textStatusDoing: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15,\n  },\n  swipableDelete: {\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    minWidth: 50,\n    minHeight: 50,\n    height: \"auto\",\n    borderRadius: 2,\n  },\n  swipableEdit: {\n    backgroundColor: \"green\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    flex: 1,\n    maxHeight: 50,\n    height: \"auto\",\n    borderRadius: 2,\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  checkbox: {\n    width: 64,\n    height: 64,\n  },\n});\n\nexport default ListRenderedTodos;\n\n//    // \"react-native\": \"https://github.com/expo/react-native/archive/sdk-42.0.0.tar.gz\",\n"]},"metadata":{},"sourceType":"module"}