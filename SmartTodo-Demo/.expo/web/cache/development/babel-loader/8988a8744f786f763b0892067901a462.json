{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector } from \"react-redux\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteNote from \"../../helpers/useDeleteNote\";\nimport useUpdateNote from \"../../helpers/useUpdateNote\";\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  var fullNotesList = useSelector(fullList);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentState = _useState4[0],\n      setCurrentState = _useState4[1];\n\n  var _useState5 = useState(\"Full\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonStyle = _useState6[0],\n      setButtonStyle = _useState6[1];\n\n  var deleteNote = useDeleteNote();\n  var updateNoteStatus = useUpdateNote();\n  var deleteOneTodo = useCallback(function (id, showMes, mesState) {\n    return Alert.alert(\"Delete this todo?\", \"\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed on RenderTodo \" + id);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        deleteNote(fullNotesList, id, UPDATE_FULL_LIST);\n        showMes(!mesState);\n        setTimeout(function () {\n          return showMes(mesState);\n        }, 600);\n      }\n    }]);\n  }, [fullNotesList]);\n\n  var showAllNotes = function showAllNotes(arr, buttonTitle) {\n    setCurrentState(_toConsumableArray(arr));\n    setButtonStyle(buttonTitle);\n  };\n\n  var showDoneNotes = function showDoneNotes(arr, buttonTitle) {\n    var markedArray = arr.filter(function (element) {\n      return !element.todoStatus;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(buttonTitle);\n  };\n\n  var showDoingNotes = function showDoingNotes(arr, buttonTitle) {\n    var markedArray = arr.filter(function (element) {\n      return element.todoStatus == true;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(buttonTitle);\n  };\n\n  return React.createElement(NoteList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, fullNotesList, buttonStyle, showAllNotes, showDoneNotes, showDoingNotes, showModal, updateNoteStatus, deleteOneTodo, setShowModal);\n}\n\nexport default NoteListContainer;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","fullList","NoteList","useDeleteNote","useUpdateNote","UPDATE_FULL_LIST","NoteListContainer","fullNotesList","showModal","setShowModal","currentState","setCurrentState","buttonStyle","setButtonStyle","deleteNote","updateNoteStatus","deleteOneTodo","id","showMes","mesState","Alert","alert","text","onPress","console","log","style","setTimeout","showAllNotes","arr","buttonTitle","showDoneNotes","markedArray","filter","element","todoStatus","showDoingNotes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,SAASC,gBAAT;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAMC,aAAa,GAAGP,WAAW,CAACC,QAAD,CAAjC;;AAEA,kBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwCZ,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOa,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAsCd,QAAQ,CAAC,MAAD,CAA9C;AAAA;AAAA,MAAOe,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;AACA,MAAMY,gBAAgB,GAAGX,aAAa,EAAtC;AAIA,MAAMY,aAAa,GAAGlB,WAAW,CAC/B,UAACmB,EAAD,EAAKC,OAAL,EAAcC,QAAd;AAAA,WACEC,KAAK,CAACC,KAAN,CAAY,mBAAZ,EAAiC,EAAjC,EAAqC,CACnC;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,mCAA4CR,EAA5C,CAAN;AAAA,OAFX;AAGES,MAAAA,KAAK,EAAE;AAHT,KADmC,EAMnC;AACEJ,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE,mBAAM;AACbT,QAAAA,UAAU,CAACP,aAAD,EAAgBU,EAAhB,EAAoBZ,gBAApB,CAAV;AACAa,QAAAA,OAAO,CAAC,CAACC,QAAF,CAAP;AACAQ,QAAAA,UAAU,CAAC;AAAA,iBAAMT,OAAO,CAACC,QAAD,CAAb;AAAA,SAAD,EAA0B,GAA1B,CAAV;AACD;AANH,KANmC,CAArC,CADF;AAAA,GAD+B,EAiB/B,CAACZ,aAAD,CAjB+B,CAAjC;;AAoBA,MAAMqB,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,WAAN,EAAsB;AACzCnB,IAAAA,eAAe,oBAAKkB,GAAL,EAAf;AACAhB,IAAAA,cAAc,CAACiB,WAAD,CAAd;AACD,GAHD;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACF,GAAD,EAAMC,WAAN,EAAsB;AAC1C,QAAIE,WAAW,GAAGH,GAAG,CAACI,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAa,CAACA,OAAO,CAACC,UAAtB;AAAA,KAAX,CAAlB;AACAxB,IAAAA,eAAe,oBAAKqB,WAAL,EAAf;AACAnB,IAAAA,cAAc,CAACiB,WAAD,CAAd;AACD,GAJD;;AAMA,MAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACP,GAAD,EAAMC,WAAN,EAAsB;AAC3C,QAAIE,WAAW,GAAGH,GAAG,CAACI,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACC,UAAR,IAAsB,IAAnC;AAAA,KAAX,CAAlB;AACAxB,IAAAA,eAAe,oBAAKqB,WAAL,EAAf;AACAnB,IAAAA,cAAc,CAACiB,WAAD,CAAd;AACD,GAJD;;AAMA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,aADH,EAEGK,WAFH,EAGGgB,YAHH,EAIGG,aAJH,EAKGK,cALH,EAMG5B,SANH,EAOGO,gBAPH,EAQGC,aARH,EASGP,YATH,CADF;AAaD;;AAED,eAAeH,iBAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Alert } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteNote from \"../../helpers/useDeleteNote\";\nimport useUpdateNote from \"../../helpers/useUpdateNote\";\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  const fullNotesList = useSelector(fullList);\n\n  const [showModal, setShowModal] = useState(false);\n  const [currentState, setCurrentState] = useState(\"\");\n  const [buttonStyle, setButtonStyle] = useState(\"Full\");\n\n  const deleteNote = useDeleteNote();\n  const updateNoteStatus = useUpdateNote();\n\n  // ---------------------------------------//\n\n  const deleteOneTodo = useCallback(\n    (id, showMes, mesState) =>\n      Alert.alert(\"Delete this todo?\", \"\", [\n        {\n          text: \"No\",\n          onPress: () => console.log(`Cancel Pressed on RenderTodo ${id}`),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            deleteNote(fullNotesList, id, UPDATE_FULL_LIST);\n            showMes(!mesState);\n            setTimeout(() => showMes(mesState), 600);\n          },\n        },\n      ]),\n    [fullNotesList]\n  );\n\n  const showAllNotes = (arr, buttonTitle) => {\n    setCurrentState([...arr]);\n    setButtonStyle(buttonTitle);\n  };\n\n  const showDoneNotes = (arr, buttonTitle) => {\n    let markedArray = arr.filter((element) => !element.todoStatus);\n    setCurrentState([...markedArray]);\n    setButtonStyle(buttonTitle);\n  };\n\n  const showDoingNotes = (arr, buttonTitle) => {\n    let markedArray = arr.filter((element) => element.todoStatus == true);\n    setCurrentState([...markedArray]);\n    setButtonStyle(buttonTitle);\n  };\n\n  return (\n    <NoteList>\n      {fullNotesList}\n      {buttonStyle}\n      {showAllNotes}\n      {showDoneNotes}\n      {showDoingNotes}\n      {showModal}\n      {updateNoteStatus}\n      {deleteOneTodo}\n      {setShowModal}\n    </NoteList>\n  );\n}\n\nexport default NoteListContainer;\n"]},"metadata":{},"sourceType":"module"}