{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from \"react-redux\";\nimport { fullList, doneList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteTodo from \"../../helpers/useDeleteNote\";\nimport useUpdateStatus from \"../../helpers/useUpdateNote\";\nimport { SET_DONE_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  var fullNotesList = useSelector(fullList);\n  var getDoneList = useSelector(doneList);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentState = _useState4[0],\n      setCurrentState = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonStyle = _useState6[0],\n      setButtonStyle = _useState6[1];\n\n  var deleteTodo = useDeleteTodo();\n  var updateStatus = useUpdateStatus();\n\n  var letDeleteTodo = function letDeleteTodo(id) {\n    deleteTodo(fullNotesList, id, SET_DONE_LIST);\n  };\n\n  var deleteOneTodo = useCallback(function (letDeleteTodo, id, showMes, mesState) {\n    return Alert.alert(\"Delete this todo?\", \"\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed on RenderTodo \" + id);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        letDeleteTodo(id);\n        showMes(!mesState);\n        setTimeout(function () {\n          return showMes(mesState);\n        }, 600);\n      }\n    }]);\n  }, [mainTodo]);\n  useEffect(function () {\n    setCurrentState(fullNotesList);\n    setMainTodo(fullNotesList);\n  }, [fullNotesList]);\n\n  var showAllNotes = function showAllNotes(arr, e) {\n    setCurrentState(_toConsumableArray(arr));\n    setButtonStyle(e);\n  };\n\n  var showDoneNotes = function showDoneNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return !element.todoStatus;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  var showDoingNotes = function showDoingNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return element.todoStatus == true;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  return React.createElement(NoteList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, fullNotesList, buttonStyle, showAllNotes, showDoneNotes, showDoingNotes, currentState, showModal, letDeleteTodo, updateStatus, deleteOneTodo, setShowModal);\n}\n\nexport default NoteListContainer;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","fullList","doneList","NoteList","useDeleteTodo","useUpdateStatus","SET_DONE_LIST","NoteListContainer","fullNotesList","getDoneList","showModal","setShowModal","currentState","setCurrentState","buttonStyle","setButtonStyle","deleteTodo","updateStatus","letDeleteTodo","id","deleteOneTodo","showMes","mesState","Alert","alert","text","onPress","console","log","style","setTimeout","mainTodo","setMainTodo","showAllNotes","arr","e","showDoneNotes","markedArray","filter","element","todoStatus","showDoingNotes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,EAAmBC,QAAnB;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,SAASC,aAAT;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAMC,aAAa,GAAGR,WAAW,CAACC,QAAD,CAAjC;AACA,MAAMQ,WAAW,GAAGT,WAAW,CAACE,QAAD,CAA/B;;AACA,kBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwCd,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOe,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAsChB,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOiB,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,UAAU,GAAGZ,aAAa,EAAhC;AACA,MAAMa,YAAY,GAAGZ,eAAe,EAApC;;AAEA,MAAMa,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAQ;AAC5BH,IAAAA,UAAU,CAACR,aAAD,EAAgBW,EAAhB,EAAoBb,aAApB,CAAV;AACD,GAFD;;AAcA,MAAMc,aAAa,GAAGtB,WAAW,CAC/B,UAACoB,aAAD,EAAgBC,EAAhB,EAAoBE,OAApB,EAA6BC,QAA7B;AAAA,WACEC,KAAK,CAACC,KAAN,CAAY,mBAAZ,EAAiC,EAAjC,EAAqC,CACnC;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,mCAA4CT,EAA5C,CAAN;AAAA,OAFX;AAGEU,MAAAA,KAAK,EAAE;AAHT,KADmC,EAMnC;AACEJ,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE,mBAAM;AACbR,QAAAA,aAAa,CAACC,EAAD,CAAb;AACAE,QAAAA,OAAO,CAAC,CAACC,QAAF,CAAP;AACAQ,QAAAA,UAAU,CAAC;AAAA,iBAAMT,OAAO,CAACC,QAAD,CAAb;AAAA,SAAD,EAA0B,GAA1B,CAAV;AACD;AANH,KANmC,CAArC,CADF;AAAA,GAD+B,EAiB/B,CAACS,QAAD,CAjB+B,CAAjC;AAoBAhC,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,eAAe,CAACL,aAAD,CAAf;AACAwB,IAAAA,WAAW,CAACxB,aAAD,CAAX;AACD,GAHQ,EAGN,CAACA,aAAD,CAHM,CAAT;;AAKA,MAAMyB,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,CAAN,EAAY;AAC/BtB,IAAAA,eAAe,oBAAKqB,GAAL,EAAf;AACAnB,IAAAA,cAAc,CAACoB,CAAD,CAAd;AACD,GAHD;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACF,GAAD,EAAMC,CAAN,EAAY;AAChC,QAAIE,WAAW,GAAGH,GAAG,CAACI,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAa,CAACA,OAAO,CAACC,UAAtB;AAAA,KAAX,CAAlB;AACA3B,IAAAA,eAAe,oBAAKwB,WAAL,EAAf;AACAtB,IAAAA,cAAc,CAACoB,CAAD,CAAd;AACD,GAJD;;AAMA,MAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACP,GAAD,EAAMC,CAAN,EAAY;AACjC,QAAIE,WAAW,GAAGH,GAAG,CAACI,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACC,UAAR,IAAsB,IAAnC;AAAA,KAAX,CAAlB;AACA3B,IAAAA,eAAe,oBAAKwB,WAAL,EAAf;AACAtB,IAAAA,cAAc,CAACoB,CAAD,CAAd;AACD,GAJD;;AAMA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,aADH,EAEGM,WAFH,EAGGmB,YAHH,EAIGG,aAJH,EAKGK,cALH,EAMG7B,YANH,EAOGF,SAPH,EAQGQ,aARH,EASGD,YATH,EAUGG,aAVH,EAWGT,YAXH,CADF;AAeD;;AAED,eAAeJ,iBAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Alert, Button, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nimport { fullList, doneList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteTodo from \"../../helpers/useDeleteNote\";\nimport useUpdateStatus from \"../../helpers/useUpdateNote\";\nimport { SET_DONE_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  const fullNotesList = useSelector(fullList);\n  const getDoneList = useSelector(doneList);\n  const [showModal, setShowModal] = useState(false);\n  const [currentState, setCurrentState] = useState(\"\");\n  const [buttonStyle, setButtonStyle] = useState(\"\");\n\n  const deleteTodo = useDeleteTodo();\n  const updateStatus = useUpdateStatus();\n\n  const letDeleteTodo = (id) => {\n    deleteTodo(fullNotesList, id, SET_DONE_LIST);\n  }; /* We have to delete my todo if item.id == id, or elem have to save if item.id !== id. Remember, filter return TRUE data */\n\n  /* Next time i going to do cheker for todoStatus in mainTodo-state, but i dont know how identificate elem-id from current element (like e.target.data-path in react)*/\n  // const updateStatus = (id, status) => {\n  //   const itemData = fullNotesList.map((item) =>\n  //     item.id === id ? { ...item, todoStatus: status } : item\n  //   );\n  //   setMainTodo([...itemData]);\n  // };\n\n  // ---------------------------------------//\n\n  const deleteOneTodo = useCallback(\n    (letDeleteTodo, id, showMes, mesState) =>\n      Alert.alert(\"Delete this todo?\", \"\", [\n        {\n          text: \"No\",\n          onPress: () => console.log(`Cancel Pressed on RenderTodo ${id}`),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            letDeleteTodo(id);\n            showMes(!mesState);\n            setTimeout(() => showMes(mesState), 600);\n          },\n        },\n      ]),\n    [mainTodo]\n  );\n\n  useEffect(() => {\n    setCurrentState(fullNotesList); // Тут я закончил на адекватном рендере данных после ввода\n    setMainTodo(fullNotesList);\n  }, [fullNotesList]);\n\n  const showAllNotes = (arr, e) => {\n    setCurrentState([...arr]);\n    setButtonStyle(e);\n  };\n\n  const showDoneNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => !element.todoStatus);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  const showDoingNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => element.todoStatus == true);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  return (\n    <NoteList>\n      {fullNotesList}\n      {buttonStyle}\n      {showAllNotes}\n      {showDoneNotes}\n      {showDoingNotes}\n      {currentState}\n      {showModal}\n      {letDeleteTodo}\n      {updateStatus}\n      {deleteOneTodo}\n      {setShowModal}\n    </NoteList>\n  );\n}\n\nexport default NoteListContainer;\n"]},"metadata":{},"sourceType":"module"}