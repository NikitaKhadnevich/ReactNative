{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from \"react-redux\";\nimport { fullList, doneList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteTodo from \"../../helpers/useDeleteNote\";\nimport { SET_DONE_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  var fullNotesList = useSelector(fullList);\n  var getDoneList = useSelector(doneList);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentState = _useState4[0],\n      setCurrentState = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonStyle = _useState6[0],\n      setButtonStyle = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mainTodo = _useState8[0],\n      setMainTodo = _useState8[1];\n\n  var deleteTodo = useDeleteTodo();\n\n  var letDeleteTodo = function letDeleteTodo(id) {\n    deleteTodo(fullNotesList, id, SET_DONE_LIST);\n  };\n\n  var updateStatus = function updateStatus(id, status) {\n    var itemData = mainTodo.map(function (item) {\n      return item.id === id ? _objectSpread(_objectSpread({}, item), {}, {\n        todoStatus: status\n      }) : item;\n    });\n    setMainTodo(_toConsumableArray(itemData));\n  };\n\n  useEffect(function () {\n    console.log(\"getDoneList\", getDoneList);\n  }, []);\n  var deleteOneTodo = useCallback(function (letDeleteTodo, id, showMes, mesState) {\n    return Alert.alert(\"Delete this todo?\", \"\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed on RenderTodo \" + id);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        letDeleteTodo(id);\n        showMes(!mesState);\n        setTimeout(function () {\n          return showMes(mesState);\n        }, 600);\n      }\n    }]);\n  }, [mainTodo]);\n  useEffect(function () {\n    setCurrentState(fullNotesList);\n    setMainTodo(fullNotesList);\n  }, [fullNotesList]);\n\n  var showAllNotes = function showAllNotes(arr, e) {\n    setCurrentState(_toConsumableArray(arr));\n    setButtonStyle(e);\n  };\n\n  var showDoneNotes = function showDoneNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return !element.todoStatus;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  var showDoingNotes = function showDoingNotes(arr, e) {\n    var markedArray = arr.filter(function (element) {\n      return element.todoStatus == true;\n    });\n    setCurrentState(_toConsumableArray(markedArray));\n    setButtonStyle(e);\n  };\n\n  return React.createElement(NoteList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, fullNotesList, buttonStyle, showAllNotes, showDoneNotes, showDoingNotes, currentState, showModal, letDeleteTodo, updateStatus, deleteOneTodo, setShowModal);\n}\n\nexport default NoteListContainer;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/NoteListContainer.js"],"names":["React","useState","useCallback","useEffect","useSelector","fullList","doneList","NoteList","useDeleteTodo","SET_DONE_LIST","NoteListContainer","fullNotesList","getDoneList","showModal","setShowModal","currentState","setCurrentState","buttonStyle","setButtonStyle","mainTodo","setMainTodo","deleteTodo","letDeleteTodo","id","updateStatus","status","itemData","map","item","todoStatus","console","log","deleteOneTodo","showMes","mesState","Alert","alert","text","onPress","style","setTimeout","showAllNotes","arr","e","showDoneNotes","markedArray","filter","element","showDoingNotes"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Alert, Button, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nimport { fullList, doneList } from \"../../reduxApi/notesList/notesSelectors\";\nimport NoteList from \"./NoteList\";\nimport useDeleteTodo from \"../../helpers/useDeleteNote\";\nimport { SET_DONE_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nfunction NoteListContainer() {\n  const fullNotesList = useSelector(fullList);\n  const getDoneList = useSelector(doneList);\n  const [showModal, setShowModal] = useState(false);\n  const [currentState, setCurrentState] = useState(\"\");\n  const [buttonStyle, setButtonStyle] = useState(\"\");\n  const [mainTodo, setMainTodo] = useState();\n  const deleteTodo = useDeleteTodo();\n\n  const letDeleteTodo = (id) => {\n    deleteTodo(fullNotesList, id, SET_DONE_LIST);\n  }; /* We have to delete my todo if item.id == id, or elem have to save if item.id !== id. Remember, filter return TRUE data */\n\n  /* Next time i going to do cheker for todoStatus in mainTodo-state, but i dont know how identificate elem-id from current element (like e.target.data-path in react)*/\n  const updateStatus = (id, status) => {\n    const itemData = mainTodo.map((item) =>\n      item.id === id ? { ...item, todoStatus: status } : item\n    );\n    setMainTodo([...itemData]);\n  };\n\n  useEffect(() => {\n    console.log(\"getDoneList\", getDoneList);\n  }, []);\n\n  // ---------------------------------------//\n\n  const deleteOneTodo = useCallback(\n    (letDeleteTodo, id, showMes, mesState) =>\n      Alert.alert(\"Delete this todo?\", \"\", [\n        {\n          text: \"No\",\n          onPress: () => console.log(`Cancel Pressed on RenderTodo ${id}`),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            letDeleteTodo(id);\n            showMes(!mesState);\n            setTimeout(() => showMes(mesState), 600);\n          },\n        },\n      ]),\n    [mainTodo]\n  );\n\n  useEffect(() => {\n    setCurrentState(fullNotesList); // Тут я закончил на адекватном рендере данных после ввода\n    setMainTodo(fullNotesList);\n  }, [fullNotesList]);\n\n  const showAllNotes = (arr, e) => {\n    setCurrentState([...arr]);\n    setButtonStyle(e);\n  };\n\n  const showDoneNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => !element.todoStatus);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  const showDoingNotes = (arr, e) => {\n    let markedArray = arr.filter((element) => element.todoStatus == true);\n    setCurrentState([...markedArray]);\n    setButtonStyle(e);\n  };\n\n  return (\n    <NoteList>\n      {fullNotesList}\n      {buttonStyle}\n      {showAllNotes}\n      {showDoneNotes}\n      {showDoingNotes}\n      {currentState}\n      {showModal}\n      {letDeleteTodo}\n      {updateStatus}\n      {deleteOneTodo}\n      {setShowModal}\n    </NoteList>\n  );\n}\n\nexport default NoteListContainer;\n"]},"metadata":{},"sourceType":"module"}