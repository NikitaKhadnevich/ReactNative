{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport var initNotesList = {\n  fullList: [],\n  doneList: [],\n  inProgressList: []\n};\nexport var notesList = createSlice({\n  name: \"notesList-reducer\",\n  initialState: initNotesList,\n  reducers: {\n    SET_FULL_LIST: function SET_FULL_LIST(state, action) {\n      state, state.fullList = state.fullList.concat(action.payload);\n    },\n    SET_DONE_LIST: function SET_DONE_LIST(state, action) {\n      state, state.doneList = action.payload;\n    },\n    SET_IN_PROGRESS_LIST: function SET_IN_PROGRESS_LIST(state, action) {\n      state, state.inProgressList = action.payload;\n    },\n    IS_ACTIVE_NOTE: function IS_ACTIVE_NOTE(state, action) {\n      state, state.isActiveNote = action.payload;\n    },\n    SET_INFINITE_FETCH_COUNTER: function SET_INFINITE_FETCH_COUNTER(state, action) {\n      state, state.fetchHelper = action.payload;\n    },\n    SET_USERS_LIST: function SET_USERS_LIST(state, action) {\n      state, state.usersList = action.payload;\n    },\n    SET_INFINITY_PART: function SET_INFINITY_PART(state, action) {\n      state, state.notesListPart = action.payload;\n    },\n    SET_PAGE_LIMIT: function SET_PAGE_LIMIT(state, action) {\n      state, state.pageLimit = action.payload;\n    }\n  }\n});\nexport default notesList.reducer;\nvar _notesList$actions = notesList.actions,\n    SET_FULL_LIST = _notesList$actions.SET_FULL_LIST,\n    SET_DONE_LIST = _notesList$actions.SET_DONE_LIST,\n    SET_IN_PROGRESS_LIST = _notesList$actions.SET_IN_PROGRESS_LIST,\n    IS_ACTIVE_NOTE = _notesList$actions.IS_ACTIVE_NOTE,\n    SET_INFINITE_FETCH_COUNTER = _notesList$actions.SET_INFINITE_FETCH_COUNTER,\n    SET_USERS_LIST = _notesList$actions.SET_USERS_LIST,\n    SET_INFINITY_PART = _notesList$actions.SET_INFINITY_PART,\n    SET_PAGE_LIMIT = _notesList$actions.SET_PAGE_LIMIT;\nexport { SET_FULL_LIST, SET_DONE_LIST, SET_IN_PROGRESS_LIST, IS_ACTIVE_NOTE, SET_INFINITE_FETCH_COUNTER, SET_USERS_LIST, SET_INFINITY_PART, SET_PAGE_LIMIT };","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/reduxApi/notesList/notesToolkit.js"],"names":["createSlice","initNotesList","fullList","doneList","inProgressList","notesList","name","initialState","reducers","SET_FULL_LIST","state","action","concat","payload","SET_DONE_LIST","SET_IN_PROGRESS_LIST","IS_ACTIVE_NOTE","isActiveNote","SET_INFINITE_FETCH_COUNTER","fetchHelper","SET_USERS_LIST","usersList","SET_INFINITY_PART","notesListPart","SET_PAGE_LIMIT","pageLimit","reducer","actions"],"mappings":"AAGA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,QAAQ,EAAE,EAFiB;AAG3BC,EAAAA,cAAc,EAAE;AAHW,CAAtB;AAMP,OAAO,IAAMC,SAAS,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,mBAD6B;AAEnCC,EAAAA,YAAY,EAAEN,aAFqB;AAGnCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,uBAACC,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,EAAGA,KAAK,CAACR,QAAN,GAAiBQ,KAAK,CAACR,QAAN,CAAeU,MAAf,CAAsBD,MAAM,CAACE,OAA7B,CAAzB;AACD,KAHO;AAIRC,IAAAA,aAAa,EAAE,uBAACJ,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,EAAGA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACE,OAAhC;AACD,KANO;AAORE,IAAAA,oBAAoB,EAAE,8BAACL,KAAD,EAAQC,MAAR,EAAmB;AACvCD,MAAAA,KAAK,EAAGA,KAAK,CAACN,cAAN,GAAuBO,MAAM,CAACE,OAAtC;AACD,KATO;AAURG,IAAAA,cAAc,EAAE,wBAACN,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,EAAGA,KAAK,CAACO,YAAN,GAAqBN,MAAM,CAACE,OAApC;AACD,KAZO;AAaRK,IAAAA,0BAA0B,EAAE,oCAACR,KAAD,EAAQC,MAAR,EAAmB;AAC7CD,MAAAA,KAAK,EAAGA,KAAK,CAACS,WAAN,GAAoBR,MAAM,CAACE,OAAnC;AACD,KAfO;AAgBRO,IAAAA,cAAc,EAAE,wBAACV,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,EAAGA,KAAK,CAACW,SAAN,GAAkBV,MAAM,CAACE,OAAjC;AACD,KAlBO;AAmBRS,IAAAA,iBAAiB,EAAE,2BAACZ,KAAD,EAAQC,MAAR,EAAmB;AACpCD,MAAAA,KAAK,EAAGA,KAAK,CAACa,aAAN,GAAsBZ,MAAM,CAACE,OAArC;AACD,KArBO;AAsBRW,IAAAA,cAAc,EAAE,wBAACd,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,EAAGA,KAAK,CAACe,SAAN,GAAkBd,MAAM,CAACE,OAAjC;AACD;AAxBO;AAHyB,CAAD,CAA7B;AA+BP,eAAeR,SAAS,CAACqB,OAAzB;AACO,yBASHrB,SAAS,CAACsB,OATP;AAAA,IACLlB,aADK,sBACLA,aADK;AAAA,IAELK,aAFK,sBAELA,aAFK;AAAA,IAGLC,oBAHK,sBAGLA,oBAHK;AAAA,IAILC,cAJK,sBAILA,cAJK;AAAA,IAKLE,0BALK,sBAKLA,0BALK;AAAA,IAMLE,cANK,sBAMLA,cANK;AAAA,IAOLE,iBAPK,sBAOLA,iBAPK;AAAA,IAQLE,cARK,sBAQLA,cARK","sourcesContent":["/* eslint-disable no-sequences */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initNotesList = {\n  fullList: [],\n  doneList: [],\n  inProgressList: [],\n};\n\nexport const notesList = createSlice({\n  name: \"notesList-reducer\",\n  initialState: initNotesList,\n  reducers: {\n    SET_FULL_LIST: (state, action) => {\n      state, (state.fullList = state.fullList.concat(action.payload));\n    },\n    SET_DONE_LIST: (state, action) => {\n      state, (state.doneList = action.payload);\n    },\n    SET_IN_PROGRESS_LIST: (state, action) => {\n      state, (state.inProgressList = action.payload);\n    },\n    IS_ACTIVE_NOTE: (state, action) => {\n      state, (state.isActiveNote = action.payload);\n    },\n    SET_INFINITE_FETCH_COUNTER: (state, action) => {\n      state, (state.fetchHelper = action.payload);\n    },\n    SET_USERS_LIST: (state, action) => {\n      state, (state.usersList = action.payload);\n    },\n    SET_INFINITY_PART: (state, action) => {\n      state, (state.notesListPart = action.payload);\n    },\n    SET_PAGE_LIMIT: (state, action) => {\n      state, (state.pageLimit = action.payload);\n    },\n  },\n});\n\nexport default notesList.reducer;\nexport const {\n  SET_FULL_LIST,\n  SET_DONE_LIST,\n  SET_IN_PROGRESS_LIST,\n  IS_ACTIVE_NOTE,\n  SET_INFINITE_FETCH_COUNTER,\n  SET_USERS_LIST,\n  SET_INFINITY_PART,\n  SET_PAGE_LIMIT,\n} = notesList.actions;\n"]},"metadata":{},"sourceType":"module"}