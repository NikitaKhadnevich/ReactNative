{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport var initNotesList = {\n  fullList: [],\n  doneList: [],\n  inProgressList: []\n};\nexport var notesList = createSlice({\n  name: \"notesList-reducer\",\n  initialState: initNotesList,\n  reducers: {\n    SET_FULL_LIST: function SET_FULL_LIST(state, action) {\n      state, state.fullList = state.fullList.concat([action.payload]);\n    },\n    UPDATE_FULL_LIST: function UPDATE_FULL_LIST(state, action) {\n      state, state.fullList = action.payload;\n    },\n    SET_DONE_LIST: function SET_DONE_LIST(state, action) {\n      state, state.doneList = action.payload;\n    },\n    UPDATE_DONE_LIST: function UPDATE_DONE_LIST(state, action) {\n      state, state.fullList = action.payload;\n    }\n  }\n});\nexport default notesList.reducer;\nvar _notesList$actions = notesList.actions,\n    SET_FULL_LIST = _notesList$actions.SET_FULL_LIST,\n    UPDATE_FULL_LIST = _notesList$actions.UPDATE_FULL_LIST,\n    SET_DONE_LIST = _notesList$actions.SET_DONE_LIST,\n    SET_IN_PROGRESS_LIST = _notesList$actions.SET_IN_PROGRESS_LIST,\n    IS_ACTIVE_NOTE = _notesList$actions.IS_ACTIVE_NOTE,\n    SET_INFINITE_FETCH_COUNTER = _notesList$actions.SET_INFINITE_FETCH_COUNTER,\n    SET_USERS_LIST = _notesList$actions.SET_USERS_LIST,\n    SET_INFINITY_PART = _notesList$actions.SET_INFINITY_PART,\n    SET_PAGE_LIMIT = _notesList$actions.SET_PAGE_LIMIT;\nexport { SET_FULL_LIST, UPDATE_FULL_LIST, SET_DONE_LIST, SET_IN_PROGRESS_LIST, IS_ACTIVE_NOTE, SET_INFINITE_FETCH_COUNTER, SET_USERS_LIST, SET_INFINITY_PART, SET_PAGE_LIMIT };","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/reduxApi/notesList/notesToolkit.js"],"names":["createSlice","initNotesList","fullList","doneList","inProgressList","notesList","name","initialState","reducers","SET_FULL_LIST","state","action","concat","payload","UPDATE_FULL_LIST","SET_DONE_LIST","UPDATE_DONE_LIST","reducer","actions","SET_IN_PROGRESS_LIST","IS_ACTIVE_NOTE","SET_INFINITE_FETCH_COUNTER","SET_USERS_LIST","SET_INFINITY_PART","SET_PAGE_LIMIT"],"mappings":"AAGA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,QAAQ,EAAE,EAFiB;AAG3BC,EAAAA,cAAc,EAAE;AAHW,CAAtB;AAMP,OAAO,IAAMC,SAAS,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,mBAD6B;AAEnCC,EAAAA,YAAY,EAAEN,aAFqB;AAGnCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,uBAACC,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,EAAGA,KAAK,CAACR,QAAN,GAAiBQ,KAAK,CAACR,QAAN,CAAeU,MAAf,CAAsB,CAACD,MAAM,CAACE,OAAR,CAAtB,CAAzB;AACD,KAHO;AAIRC,IAAAA,gBAAgB,EAAE,0BAACJ,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,EAAGA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACE,OAAhC;AACD,KANO;AAORE,IAAAA,aAAa,EAAE,uBAACL,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,EAAGA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACE,OAAhC;AACD,KATO;AAURG,IAAAA,gBAAgB,EAAE,0BAACN,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,EAAGA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACE,OAAhC;AACD;AAZO;AAHyB,CAAD,CAA7B;AAmBP,eAAeR,SAAS,CAACY,OAAzB;AACO,yBAUHZ,SAAS,CAACa,OAVP;AAAA,IACLT,aADK,sBACLA,aADK;AAAA,IAELK,gBAFK,sBAELA,gBAFK;AAAA,IAGLC,aAHK,sBAGLA,aAHK;AAAA,IAILI,oBAJK,sBAILA,oBAJK;AAAA,IAKLC,cALK,sBAKLA,cALK;AAAA,IAMLC,0BANK,sBAMLA,0BANK;AAAA,IAOLC,cAPK,sBAOLA,cAPK;AAAA,IAQLC,iBARK,sBAQLA,iBARK;AAAA,IASLC,cATK,sBASLA,cATK","sourcesContent":["/* eslint-disable no-sequences */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initNotesList = {\n  fullList: [],\n  doneList: [],\n  inProgressList: [],\n};\n\nexport const notesList = createSlice({\n  name: \"notesList-reducer\",\n  initialState: initNotesList,\n  reducers: {\n    SET_FULL_LIST: (state, action) => {\n      state, (state.fullList = state.fullList.concat([action.payload]));\n    },\n    UPDATE_FULL_LIST: (state, action) => {\n      state, (state.fullList = action.payload);\n    },\n    SET_DONE_LIST: (state, action) => {\n      state, (state.doneList = action.payload);\n    },\n    UPDATE_DONE_LIST: (state, action) => {\n      state, (state.fullList = action.payload);\n    },\n  },\n});\n\nexport default notesList.reducer;\nexport const {\n  SET_FULL_LIST,\n  UPDATE_FULL_LIST,\n  SET_DONE_LIST,\n  SET_IN_PROGRESS_LIST,\n  IS_ACTIVE_NOTE,\n  SET_INFINITE_FETCH_COUNTER,\n  SET_USERS_LIST,\n  SET_INFINITY_PART,\n  SET_PAGE_LIMIT,\n} = notesList.actions;\n"]},"metadata":{},"sourceType":"module"}