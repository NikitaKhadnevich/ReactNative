{"ast":null,"code":"import React, { useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport CheckBox from \"expo-checkbox\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nvar ListRenderedTodos = function ListRenderedTodos(_ref) {\n  var item = _ref.item,\n      setShowModal = _ref.setShowModal,\n      showModal = _ref.showModal,\n      index = _ref.index,\n      deleteOneNote = _ref.deleteOneNote,\n      updateNoteStatus = _ref.updateNoteStatus;\n  var fullNotesList = useSelector(fullList);\n\n  var checkerWrapper = function checkerWrapper(id, status) {\n    updateNoteStatus(fullNotesList, id, UPDATE_FULL_LIST, status);\n  };\n\n  var rightSwipe = function rightSwipe(progress, dragX) {\n    var scale = dragX.interpolate({\n      inputRange: [0, 100],\n      outputRange: [1, 0],\n      extrapolate: \"clamp\"\n    });\n    console.log(\"ON NOTELIST\", item.inProgess);\n    return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deleteOneNote(item.id, setShowModal, showModal);\n      },\n      activeOpacity: 0.7\n    }, React.createElement(View, {\n      style: styles.swipableDelete\n    }, React.createElement(Animated.Text, {\n      style: {\n        transform: [{\n          scale: scale\n        }]\n      }\n    }, \"Delete\"))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return Alert.alert(\"letDeleteTodo, item.id, setShowModal, showModal\", \"\");\n      },\n      activeOpacity: 0.7\n    }, React.createElement(View, {\n      style: styles.swipableEdit\n    }, React.createElement(Animated.Text, {\n      style: {\n        transform: [{\n          scale: scale\n        }]\n      }\n    }, \"Do it again\"))));\n  };\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7\n  }, React.createElement(Swipeable, {\n    renderRightActions: rightSwipe\n  }, React.createElement(View, {\n    style: styles.containerList\n  }, React.createElement(View, {\n    style: styles.textBlock\n  }, React.createElement(Text, {\n    style: styles.renderIndex\n  }, index + 1), React.createElement(Text, {\n    style: item.inProgess ? styles.renderTextDoing : styles.renderTextDone\n  }, item.title), React.createElement(CheckBox, {\n    style: item.inProgess ? styles.doingCheckBox : styles.doneCheckBox,\n    value: !item.inProgess,\n    onValueChange: function onValueChange() {\n      return checkerWrapper(item.id, !item.inProgess);\n    },\n    color: !item.inProgess ? \"green\" : \"silver\"\n  })), React.createElement(View, {\n    style: styles.infoBlock\n  }, React.createElement(Text, {\n    style: styles.whenAdded\n  }, \"Added \", item.date), React.createElement(Text, {\n    style: item.inProgess ? styles.textStatusDoing : styles.textStatusDone\n  }, item.inProgess ? \"In progress...\" : \"Done\")))));\n};\n\nvar styles = StyleSheet.create({\n  containerList: {\n    height: \"auto\",\n    backgroundColor: \"#111\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  hideContainerLst: {\n    display: \"none\"\n  },\n  flatBlock: {\n    marginBottom: 50\n  },\n  doingCheckBox: {\n    borderColor: \"silver\",\n    borderRadius: 20,\n    width: 20,\n    height: 20\n  },\n  doneCheckBox: {\n    color: \"red\",\n    borderColor: \"green\",\n    borderRadius: 50,\n    width: 20,\n    height: 20\n  },\n  wrapperSwiper: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  textBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#bcd4d436\",\n    borderRadius: 4,\n    width: \"100%\",\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    marginVertical: 5\n  },\n  renderIndex: {\n    color: \"silver\",\n    paddingHorizontal: 0,\n    width: 20\n  },\n  renderTextDone: {\n    width: \"85%\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"line-through\"\n  },\n  renderTextDoing: {\n    width: \"85%\",\n    color: \"silver\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"none\"\n  },\n  infoBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  whenAdded: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15\n  },\n  textStatusDone: {\n    color: \"rgba(80, 150, 65, 0.65)\",\n    marginBottom: 15\n  },\n  textStatusDoing: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15\n  },\n  swipableDelete: {\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    minWidth: 50,\n    minHeight: 50,\n    height: \"auto\",\n    borderRadius: 2\n  },\n  swipableEdit: {\n    backgroundColor: \"green\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    flex: 1,\n    maxHeight: 50,\n    height: \"auto\",\n    borderRadius: 2\n  }\n});\nexport default ListRenderedTodos;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/NotesList/ListRenderedTodos.js"],"names":["React","useState","useMemo","styled","useDispatch","useSelector","Swipeable","CheckBox","fullList","UPDATE_FULL_LIST","ListRenderedTodos","item","setShowModal","showModal","index","deleteOneNote","updateNoteStatus","fullNotesList","checkerWrapper","id","status","rightSwipe","progress","dragX","scale","interpolate","inputRange","outputRange","extrapolate","console","log","inProgess","styles","swipableDelete","transform","Alert","alert","swipableEdit","containerList","textBlock","renderIndex","renderTextDoing","renderTextDone","title","doingCheckBox","doneCheckBox","infoBlock","whenAdded","date","textStatusDoing","textStatusDone","StyleSheet","create","height","backgroundColor","justifyContent","width","hideContainerLst","display","flatBlock","marginBottom","borderColor","borderRadius","color","wrapperSwiper","flexDirection","flex","alignItems","borderWidth","paddingHorizontal","paddingVertical","marginVertical","textAlign","textDecorationLine","marginTop","marginLeft","padding","minWidth","minHeight","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  Alert,\n  TouchableOpacity,\n} from \"react-native\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport CheckBox from \"expo-checkbox\";\nimport { fullList } from \"../../reduxApi/notesList/notesSelectors\";\n\nimport { UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\n\nconst ListRenderedTodos = ({\n  item,\n  setShowModal,\n  showModal,\n  index,\n  deleteOneNote,\n  updateNoteStatus,\n}) => {\n  const fullNotesList = useSelector(fullList);\n\n  const checkerWrapper = (id, status) => {\n    updateNoteStatus(fullNotesList, id, UPDATE_FULL_LIST, status);\n  };\n\n  const rightSwipe = (progress, dragX) => {\n    const scale = dragX.interpolate({\n      inputRange: [0, 100],\n      outputRange: [1, 0],\n      extrapolate: \"clamp\",\n    });\n\n    console.log(\"ON NOTELIST\", item.inProgess);\n\n    return (\n      <>\n        <TouchableOpacity\n          onPress={() => deleteOneNote(item.id, setShowModal, showModal)}\n          activeOpacity={0.7}\n        >\n          <View style={styles.swipableDelete}>\n            <Animated.Text style={{ transform: [{ scale: scale }] }}>\n              Delete\n            </Animated.Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() =>\n            Alert.alert(\"letDeleteTodo, item.id, setShowModal, showModal\", \"\")\n          }\n          activeOpacity={0.7}\n        >\n          <View style={styles.swipableEdit}>\n            <Animated.Text style={{ transform: [{ scale: scale }] }}>\n              Do it again\n            </Animated.Text>\n          </View>\n        </TouchableOpacity>\n      </>\n    );\n  };\n\n  return (\n    <TouchableOpacity activeOpacity={0.7}>\n      <Swipeable renderRightActions={rightSwipe}>\n        <View style={styles.containerList}>\n          <View style={styles.textBlock}>\n            <Text style={styles.renderIndex}>{index + 1}</Text>\n            <Text\n              style={\n                item.inProgess ? styles.renderTextDoing : styles.renderTextDone\n              }\n            >\n              {item.title}\n            </Text>\n            <CheckBox\n              style={\n                item.inProgess ? styles.doingCheckBox : styles.doneCheckBox\n              }\n              value={!item.inProgess}\n              onValueChange={() => checkerWrapper(item.id, !item.inProgess)}\n              color={!item.inProgess ? \"green\" : \"silver\"}\n            />\n          </View>\n\n          <View style={styles.infoBlock}>\n            <Text style={styles.whenAdded}>Added {item.date}</Text>\n            <Text\n              style={\n                item.inProgess ? styles.textStatusDoing : styles.textStatusDone\n              }\n            >\n              {item.inProgess ? \"In progress...\" : \"Done\"}\n            </Text>\n          </View>\n        </View>\n      </Swipeable>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerList: {\n    height: \"auto\",\n    backgroundColor: \"#111\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  hideContainerLst: {\n    display: \"none\",\n  },\n  flatBlock: {\n    marginBottom: 50,\n  },\n  doingCheckBox: {\n    borderColor: \"silver\",\n    borderRadius: 20,\n    width: 20,\n    height: 20,\n  },\n  doneCheckBox: {\n    color: \"red\",\n    borderColor: \"green\",\n    borderRadius: 50,\n    width: 20,\n    height: 20,\n  },\n  wrapperSwiper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  textBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#bcd4d436\",\n    borderRadius: 4,\n    width: \"100%\",\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    marginVertical: 5,\n  },\n  renderIndex: {\n    color: \"silver\",\n    paddingHorizontal: 0,\n    width: 20,\n  },\n  renderTextDone: {\n    width: \"85%\",\n    color: \"rgba(80, 150, 65, 0.65)\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"line-through\",\n  },\n  renderTextDoing: {\n    width: \"85%\",\n    color: \"silver\",\n    paddingHorizontal: 5,\n    textAlign: \"justify\",\n    textDecorationLine: \"none\",\n  },\n  infoBlock: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  whenAdded: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15,\n  },\n  textStatusDone: {\n    color: \"rgba(80, 150, 65, 0.65)\",\n    marginBottom: 15,\n  },\n  textStatusDoing: {\n    color: \"rgba(168, 168, 168, 0.3)\",\n    marginBottom: 15,\n  },\n  swipableDelete: {\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    minWidth: 50,\n    minHeight: 50,\n    height: \"auto\",\n    borderRadius: 2,\n  },\n  swipableEdit: {\n    backgroundColor: \"green\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 5,\n    marginLeft: 5,\n    padding: 5,\n    flex: 1,\n    maxHeight: 50,\n    height: \"auto\",\n    borderRadius: 2,\n  },\n});\n\nexport default ListRenderedTodos;\n\n//    // \"react-native\": \"https://github.com/expo/react-native/archive/sdk-42.0.0.tar.gz\",\n"]},"metadata":{},"sourceType":"module"}