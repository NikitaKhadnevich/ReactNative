{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/DoneList/DoneListContainer.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListRenderedTodos from \"./ListRenderedTodos\";\nimport { SET_FULL_LIST, SET_DONE_LIST, SET_IN_PROGRESS_LIST, UPDATE_FULL_LIST } from \"../../reduxApi/notesList/notesToolkit\";\nimport { fullList, doneList } from \"../../reduxApi/notesList/notesSelectors\";\nimport DoneList from \"./DoneList\";\nimport useDeleteNote from \"../../helpers/useDeleteNote\";\nimport useUpdateNote from \"../../helpers/useUpdateNote\";\n\nfunction DoneListContainer() {\n  var fullNotesList = useSelector(fullList);\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(\"Full\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buttonStyle = _useState4[0],\n      setButtonStyle = _useState4[1];\n\n  var deleteNote = useDeleteNote();\n  var updateNoteStatus = useUpdateNote();\n  var deleteOneNote = useCallback(function (id, showMes, mesState) {\n    return Alert.alert(\"Delete this todo?\", \"\", [{\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed on RenderTodo \" + id);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        deleteNote(fullNotesList, id, UPDATE_FULL_LIST);\n        showMes(!mesState);\n        setTimeout(function () {\n          return showMes(mesState);\n        }, 600);\n      }\n    }]);\n  }, [fullNotesList]);\n\n  var showDoneNotes = function showDoneNotes(arr, buttonTitle) {\n    var markedArray = arr.filter(function (element) {\n      return element.inProcess == false;\n    });\n    dispatch(SET_DONE_LIST(markedArray));\n    setButtonStyle(buttonTitle);\n  };\n\n  var showDoingNotes = function showDoingNotes(arr, buttonTitle) {\n    var markedArray = arr.filter(function (element) {\n      return element.inProcess == true;\n    });\n    dispatch(SET_IN_PROGRESS_LIST(markedArray));\n    setButtonStyle(buttonTitle);\n  };\n\n  return React.createElement(DoneList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, fullNotesList, buttonStyle, showDoneNotes, showDoingNotes, showModal, updateNoteStatus, deleteOneNote, setShowModal);\n}\n\nexport default DoneListContainer;","map":{"version":3,"sources":["/Users/nikitahadnevic/Documents/JS_BackUp/JS/ReactNative/SmartTodo-Demo/src/pages/DoneList/DoneListContainer.js"],"names":["React","useState","useCallback","useEffect","useDispatch","useSelector","ListRenderedTodos","SET_FULL_LIST","SET_DONE_LIST","SET_IN_PROGRESS_LIST","UPDATE_FULL_LIST","fullList","doneList","DoneList","useDeleteNote","useUpdateNote","DoneListContainer","fullNotesList","dispatch","showModal","setShowModal","buttonStyle","setButtonStyle","deleteNote","updateNoteStatus","deleteOneNote","id","showMes","mesState","Alert","alert","text","onPress","console","log","style","setTimeout","showDoneNotes","arr","buttonTitle","markedArray","filter","element","inProcess","showDoingNotes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,iBAAP;AAEA,SACEC,aADF,EAEEC,aAFF,EAGEC,oBAHF,EAIEC,gBAJF;AAMA,SAASC,QAAT,EAAmBC,QAAnB;AAEA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAMC,aAAa,GAAGZ,WAAW,CAACM,QAAD,CAAjC;AACA,MAAMO,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,kBAAkCH,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOkB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAsCnB,QAAQ,CAAC,MAAD,CAA9C;AAAA;AAAA,MAAOoB,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,UAAU,GAAGT,aAAa,EAAhC;AACA,MAAMU,gBAAgB,GAAGT,aAAa,EAAtC;AAIA,MAAMU,aAAa,GAAGvB,WAAW,CAC/B,UAACwB,EAAD,EAAKC,OAAL,EAAcC,QAAd;AAAA,WACEC,KAAK,CAACC,KAAN,CAAY,mBAAZ,EAAiC,EAAjC,EAAqC,CACnC;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,mCAA4CR,EAA5C,CAAN;AAAA,OAFX;AAGES,MAAAA,KAAK,EAAE;AAHT,KADmC,EAMnC;AACEJ,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE,mBAAM;AACbT,QAAAA,UAAU,CAACN,aAAD,EAAgBS,EAAhB,EAAoBhB,gBAApB,CAAV;AACAiB,QAAAA,OAAO,CAAC,CAACC,QAAF,CAAP;AACAQ,QAAAA,UAAU,CAAC;AAAA,iBAAMT,OAAO,CAACC,QAAD,CAAb;AAAA,SAAD,EAA0B,GAA1B,CAAV;AACD;AANH,KANmC,CAArC,CADF;AAAA,GAD+B,EAiB/B,CAACX,aAAD,CAjB+B,CAAjC;;AAoBA,MAAMoB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,WAAN,EAAsB;AAC1C,QAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACC,SAAR,IAAqB,KAAlC;AAAA,KAAX,CAApB;AACAzB,IAAAA,QAAQ,CAACV,aAAa,CAACgC,WAAD,CAAd,CAAR;AACAlB,IAAAA,cAAc,CAACiB,WAAD,CAAd;AACD,GAJD;;AAMA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACN,GAAD,EAAMC,WAAN,EAAsB;AAC3C,QAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAW,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACC,SAAR,IAAqB,IAAlC;AAAA,KAAX,CAApB;AACAzB,IAAAA,QAAQ,CAACT,oBAAoB,CAAC+B,WAAD,CAArB,CAAR;AACAlB,IAAAA,cAAc,CAACiB,WAAD,CAAd;AACD,GAJD;;AAMA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,aADH,EAEGI,WAFH,EAGGgB,aAHH,EAIGO,cAJH,EAKGzB,SALH,EAMGK,gBANH,EAOGC,aAPH,EAQGL,YARH,CADF;AAYD;;AAED,eAAeJ,iBAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Alert } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListRenderedTodos from \"./ListRenderedTodos\";\n\nimport {\n  SET_FULL_LIST,\n  SET_DONE_LIST,\n  SET_IN_PROGRESS_LIST,\n  UPDATE_FULL_LIST,\n} from \"../../reduxApi/notesList/notesToolkit\";\nimport { fullList, doneList } from \"../../reduxApi/notesList/notesSelectors\";\n\nimport DoneList from \"./DoneList\";\nimport useDeleteNote from \"../../helpers/useDeleteNote\";\nimport useUpdateNote from \"../../helpers/useUpdateNote\";\n\nfunction DoneListContainer() {\n  const fullNotesList = useSelector(fullList);\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n  const [buttonStyle, setButtonStyle] = useState(\"Full\");\n\n  const deleteNote = useDeleteNote();\n  const updateNoteStatus = useUpdateNote();\n\n  // ---------------------------------------//\n\n  const deleteOneNote = useCallback(\n    (id, showMes, mesState) =>\n      Alert.alert(\"Delete this todo?\", \"\", [\n        {\n          text: \"No\",\n          onPress: () => console.log(`Cancel Pressed on RenderTodo ${id}`),\n          style: \"cancel\",\n        },\n        {\n          text: \"Yes\",\n          onPress: () => {\n            deleteNote(fullNotesList, id, UPDATE_FULL_LIST);\n            showMes(!mesState);\n            setTimeout(() => showMes(mesState), 600);\n          },\n        },\n      ]),\n    [fullNotesList]\n  );\n\n  const showDoneNotes = (arr, buttonTitle) => {\n    const markedArray = arr.filter((element) => element.inProcess == false);\n    dispatch(SET_DONE_LIST(markedArray));\n    setButtonStyle(buttonTitle);\n  };\n\n  const showDoingNotes = (arr, buttonTitle) => {\n    const markedArray = arr.filter((element) => element.inProcess == true);\n    dispatch(SET_IN_PROGRESS_LIST(markedArray));\n    setButtonStyle(buttonTitle);\n  };\n\n  return (\n    <DoneList>\n      {fullNotesList}\n      {buttonStyle}\n      {showDoneNotes}\n      {showDoingNotes}\n      {showModal}\n      {updateNoteStatus}\n      {deleteOneNote}\n      {setShowModal}\n    </DoneList>\n  );\n}\n\nexport default DoneListContainer;\n"]},"metadata":{},"sourceType":"module"}